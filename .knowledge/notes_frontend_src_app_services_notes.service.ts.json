{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service 'NotesService' that manages a collection of notes, providing methods to create, read, update, delete, and select notes, along with internal ID generation.", "external_files": ["../models/note.model"], "external_methods": [], "published": ["NotesService"], "classes": [{"name": "NotesService", "description": "Injectable Angular service managing notes with CRUD operations and selection state."}], "methods": [{"name": "getNotes(query?: string): Note[] { getNotes", "description": "Returns all notes, optionally filtered by a search query.", "scope": "NotesService", "scopeKind": "class"}, {"name": "getNoteById(id: string): Note | undefined { getNoteById", "description": "Retrieves a note by its unique identifier.", "scope": "NotesService", "scopeKind": "class"}, {"name": "createNote(note: Omit<Note, 'id' | 'createdAt' | 'updatedAt'>): Note { createNote", "description": "Creates a new note with a generated ID and timestamps.", "scope": "NotesService", "scopeKind": "class"}, {"name": "updateNote(id: string, update: Partial<Omit<Note, 'id' | 'createdAt'>>): Note | undefined { updateNote", "description": "Updates an existing note identified by ID with partial data.", "scope": "NotesService", "scopeKind": "class"}, {"name": "deleteNote(id: string): void { deleteNote", "description": "Removes a note from the collection by ID.", "scope": "NotesService", "scopeKind": "class"}, {"name": "selectNote(id: string | null): void { selectNote", "description": "Sets the currently selected note ID or clears selection.", "scope": "NotesService", "scopeKind": "class"}, {"name": "getSelectedId(): string | null { getSelectedId", "description": "Retrieves the currently selected note ID.", "scope": "NotesService", "scopeKind": "class"}, {"name": "private generateId(): string { generateId", "description": "Internal method to generate a pseudo-random string ID.", "scope": "NotesService", "scopeKind": "class"}, {"name": "constructor() { constructor", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}], "calls": ["Math.random()", "Array.prototype.filter()", "Array.prototype.unshift()", "Array.prototype.find()", "Object.assign()", "Date.prototype.getTime()"], "search-terms": ["Angular NotesService", "TypeScript note management", "CRUD notes", "note filtering", "note selection"], "state": 2, "file_id": 22, "knowledge_revision": 46, "git_revision": "", "ctags": [{"_type": "tag", "name": "NotesService", "path": "/home/kavia/workspace/code-generation/note-organizer-1535-1553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^export class NotesService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/code-generation/note-organizer-1535-1553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  constructor() {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/note-organizer-1535-1553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  createNote(note: Omit<Note, 'id' | 'createdAt' | 'updatedAt'>): Note {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/note-organizer-1535-1553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  deleteNote(id: string): void {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "generateId", "path": "/home/kavia/workspace/code-generation/note-organizer-1535-1553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  private generateId(): string {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "getNoteById", "path": "/home/kavia/workspace/code-generation/note-organizer-1535-1553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  getNoteById(id: string): Note | undefined {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "getNotes", "path": "/home/kavia/workspace/code-generation/note-organizer-1535-1553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  getNotes(query?: string): Note[] {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "getSelectedId", "path": "/home/kavia/workspace/code-generation/note-organizer-1535-1553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  getSelectedId(): string | null {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/note-organizer-1535-1553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      id: this.generateId(),$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.createNote", "scopeKind": "method"}, {"_type": "tag", "name": "newNote", "path": "/home/kavia/workspace/code-generation/note-organizer-1535-1553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const newNote: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.createNote", "scopeKind": "method"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/note-organizer-1535-1553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const note = this.getNoteById(id);$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.updateNote", "scopeKind": "method"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/note-organizer-1535-1553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  private notes: Note[] = [];$/", "language": "TypeScript", "kind": "property", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "q", "path": "/home/kavia/workspace/code-generation/note-organizer-1535-1553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const q = query.trim().toLowerCase();$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.getNotes", "scopeKind": "method"}, {"_type": "tag", "name": "selectNote", "path": "/home/kavia/workspace/code-generation/note-organizer-1535-1553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  selectNote(id: string | null): void {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "selectedId", "path": "/home/kavia/workspace/code-generation/note-organizer-1535-1553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  private selectedId: string | null = null;$/", "language": "TypeScript", "kind": "property", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/note-organizer-1535-1553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  updateNote(id: string, update: Partial<Omit<Note, 'id' | 'createdAt'>>): Note | undefined {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}], "hash": "8af03096df336c4dcf3b2cf987dcce52", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/notes.service.ts", "fields": [{"name": "private notes: Note[] = [];", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}, {"name": "private selectedId: string | null = null;", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"46": ""}]}